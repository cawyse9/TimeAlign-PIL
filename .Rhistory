'pds_total_py_female',
'mctq_sjlrel_calc', 	  #	Relative social jetlag
'mctq_sjl_calc',#	Absolute social jetlag
'chronotype',
'mctq_msfsc_calc',
'mctq_sow_calc',#	Sleep onset, workday
'mctq_sof_calc',	#	Sleep onset, freeday
'mctq_guw_calc',	#	Local time of getting out of bed, workday
'mctq_guf_calc',	#	Local time of getting out of bed, freeday
"nihtbx_totalcomp_fc", #Cognition Total Composite Score Fully-Corrected T-score)
"cbcl_scr_syn_internal_t", #	Internal CBCL Syndrome Scale (t-score)
"cbcl_scr_syn_external_t" #	External CBCL Syndrome Scale (t-score)
)
#make a new dataset for the srs models
ABCD5_core_srs <- ABCD5_core[,vars]
ABCD5_core_srs$rel_family_id
#======================================================================================
#
# 1. Clean and process variables of interest
#
#======================================================================================
# fill in NA for variable
#-----sex
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(sex = ifelse(eventname == "baseline_year_1_arm_1", sex, first(sex, na.rm = TRUE))) %>%
ungroup()
#-----sex
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(sex = ifelse(eventname == "baseline_year_1_arm_1", sex, first(sex, na.rm = TRUE))) %>%
ungroup()
ABCD5_core_srs <- ABCD5_core[,vars]
ABCD5_core_srs$rel_family_id
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(sex = ifelse(eventname == "baseline_year_1_arm_1", sex, first(sex, na.rm = TRUE))) %>%
ungroup()
table(ABCD5_core_srs$sex, ABCD5_core_srs$eventname, useNA="always")
ABCD5_core_srs$sex <- factor(as.numeric(ABCD5_core_srs$sex),    levels = 1:2, labels = c("Male", "Female"))
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(sex = ifelse(eventname == "baseline_year_1_arm_1", sex, first(sex, na.rm = TRUE))) %>%
ungroup()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
#-----site_id
table(ABCD5_core_srs$site_id_l, useNA="always")
#-----interview_age
tapply(ABCD5_core_srs$interview_age, ABCD5_core_srs$eventname, summary)
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(baseline_age = interview_age[eventname == "baseline_year_1_arm_1"][1]) %>%
ungroup()
table(ABCD5_core_srs$baseline_age, useNA = "always")
#-----deprivation percentile
tapply(ABCD5_core_srs$reshist_addr1_adi_perc, ABCD5_core_srs$eventname, summary)
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(baseline_deprivation = reshist_addr1_adi_perc[eventname == "baseline_year_1_arm_1"][1]) %>%
ungroup()
table(ABCD5_core_srs$reshist_addr1_adi_perc, useNA = "always")
tapply(ABCD5_core_srs$baseline_deprivation, ABCD5_core_srs$eventname, summary)
#-----puberty #too many NA
tapply(ABCD5_core_srs$pds_total_py, ABCD5_core_srs$eventname, summary)
#-----ethnicity
table(ABCD5_core_srs$race.4level.p, ABCD5_core_srs$eventname)
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(baseline_ethnicity = if ("baseline_year_1_arm_1" %in% eventname)
race.4level.p[eventname == "baseline_year_1_arm_1"]
else
NA_real_
) %>%
ungroup()
table(ABCD5_core_srs$baseline_ethnicity, ABCD5_core_srs$eventname, useNA = "always")
str(ABCD5_core_srs$baseline_ethnicity)
table(ABCD5_core_srs$race.4level.p)
#-----physical activity
table(ABCD5_core_srs$physical_activity1_y,ABCD5_core_srs$eventname, useNA = "always")
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(baseline_PA = if ("baseline_year_1_arm_1" %in% eventname)
physical_activity1_y[eventname == "baseline_year_1_arm_1"]
else
NA_real_
) %>%
ungroup()
tapply(ABCD5_core_srs$baseline_PA, ABCD5_core_srs$eventname, summary)
#-----screentime
tapply(ABCD5_core_srs$screentime_total_p, ABCD5_core_srs$eventname, summary)
#`2_year_follow_up_y_arm_1 isthe closest to the srs questionnaire
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(
baseline_screens = if ("2_year_follow_up_y_arm_1" %in% eventname)
screentime_total_p[eventname == "2_year_follow_up_y_arm_1"]
else
NA_real_
) %>%
ungroup()
tapply(ABCD5_core_srs$baseline_screens, ABCD5_core_srs$eventname, summary)
# -----Cognition Total Composite Score Fully-Corrected T-score
tapply(ABCD5_core_srs$nihtbx_totalcomp_fc, ABCD5_core_srs$eventname, summary)
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(
baseline_cognition = if ("baseline_year_1_arm_1" %in% eventname)
nihtbx_totalcomp_fc[eventname == "baseline_year_1_arm_1"]
else
NA_real_
) %>%
ungroup()
tapply(ABCD5_core_srs$baseline_cognition, ABCD5_core_srs$eventname, summary)
#	------------Internal CBCL Syndrome Scale (t-score) nihtbx_totalcomp_fc
tapply(ABCD5_core_srs$cbcl_scr_syn_internal_t, ABCD5_core_srs$eventname, summary)
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(
baseline_cbcl_internal = if ("1_year_follow_up_y_arm_1" %in% eventname)
cbcl_scr_syn_internal_t[eventname == "1_year_follow_up_y_arm_1"]
else
NA_real_
) %>%
ungroup()
tapply(ABCD5_core_srs$baseline_cbcl_internal, ABCD5_core_srs$eventname, summary)
#-------------External CBCL Syndrome Scale (t-score)cbcl_scr_syn_external_t
tapply(ABCD5_core_srs$cbcl_scr_syn_external_t, ABCD5_core_srs$eventname, summary)
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(
baseline_cbcl_external = if ("1_year_follow_up_y_arm_1" %in% eventname)
cbcl_scr_syn_external_t[eventname == "1_year_follow_up_y_arm_1"]
else
NA_real_
) %>%
ungroup()
tapply(ABCD5_core_srs$baseline_cbcl_external, ABCD5_core_srs$eventname, summary)
# ---------------------SRS ABCD5_core_srs$ssrs_p_ss_sum
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(
baseline_srs = if ("1_year_follow_up_y_arm_1" %in% eventname)
ssrs_p_ss_sum[eventname == "1_year_follow_up_y_arm_1"]
else
NA_real_
) %>%
ungroup()
tapply(ABCD5_core_srs$baseline_srs, ABCD5_core_srs$eventname, summary)
# --------------------- relatedness
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(
relatedness = if ("baseline_year_1_arm_1" %in% eventname)
rel_family_id[eventname == "baseline_year_1_arm_1"]
else
NA_real_
) %>%
ungroup()
table(ABCD5_core_srs$relatedness, ABCD5_core_srs$eventname,useNA = "always")
table(ABCD5_core_srs$rel_family_id, useNA = "always")
# --------------------- cat sleep disturbance
ABCD5_core_srs <- ABCD5_core_srs %>%
mutate(sds_p_ss_total = as.numeric(sds_p_ss_total),  # Ensure it's numeric
sleep_disturb_cat = case_when(
!is.na(sds_p_ss_total) & sds_p_ss_total <= 39 ~ "Normal sleep",
!is.na(sds_p_ss_total) & sds_p_ss_total >= 40 & sds_p_ss_total <= 48 ~ "Borderline sleep disturbance",
!is.na(sds_p_ss_total) & sds_p_ss_total > 48 ~ "Clinically significant sleep disturbance",
TRUE ~ NA_character_  # Preserve missing values
),
sleep_disturb_cat = factor(sleep_disturb_cat, levels = c(
"Normal sleep",
"Borderline sleep disturbance",
"Clinically significant sleep disturbance"
)))  # Explicitly define order
# --------------------- Relative social jetlag
ABCD5_core_srs$mctq_sjlrel_calc
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(
baseline_sjl = if ("1_year_follow_up_y_arm_1" %in% eventname)
mctq_sjlrel_calc[eventname == "1_year_follow_up_y_arm_1"]
else
NA_real_
) %>%
ungroup()
tapply(ABCD5_core_srs$mctq_sjlrel_calc, ABCD5_core_srs$eventname, summary)
# SRS available only for 1_year_follow_up_y_arm_1 CBCL available then too
# Chronotype available only 2 3 4 year follow up
# Sleep available 1_year_follow_up_y_arm_1
#                 2_year_follow_up_y_arm_1
#                 3_year_follow_up_y_arm_1
#                 4_year_follow_up_y_arm_1
#                 baseline_year_1_arm_1
#
#
# My baseline -     1_year_follow_up_y_arm_1
#                   2_year_follow_up_y_arm_1
#                   3_year_follow_up_y_arm_1
#                   4_year_follow_up_y_arm_1
#
#                   delete all other rows
# Define var to use
#sex site_id_l baseline_age  baseline_deprivation baseline_ethnicity baseline_PA baseline_screens baseline_cognition baseline_cbcl_internal baseline_cbcl_external
# Define the follow-up time points to keep
valid_timepoints <- c("1_year_follow_up_y_arm_1",
"2_year_follow_up_y_arm_1",
"3_year_follow_up_y_arm_1",
"4_year_follow_up_y_arm_1")
ABCD5_core_srs_dates <- ABCD5_core_srs %>%
mutate(eventname = as.character(eventname)) %>%
filter(eventname %in% valid_timepoints)%>%
mutate(eventname = as.factor(eventname))
str(ABCD5_core_srs_dates$eventname)
###########################################################################
#
# Research Question 1 - Does SRS at 10 years old predict sleep disturbance over adolescence
#
###########################################################################
# GLM with eventname as fixed categorical factor.  Events with sleep data only included
#checks
sum(is.na(ABCD5_core_srs_dates$baseline_srs))
sum(is.na(ABCD5_core_srs_dates$sex))
ABCD5_core_srs_dates$site_id_l <- droplevels(ABCD5_core_srs_dates$site_id_l)
ABCD5_core_srs_dates$src_subject_id <- as.factor(ABCD5_core_srs_dates$src_subject_id)
ABCD5_core_srs_dates$sds_p_ss_total <- as.numeric(ABCD5_core_srs_dates$sds_p_ss_total)
ABCD5_core_srs_dates <- ABCD5_core_srs_dates[!is.na(ABCD5_core_srs_dates$sds_p_ss_total), ]
length(ABCD5_core_srs_dates$sds_p_ss_total)
length(ABCD5_core_srs_dates$ssrs_p_ss_sum)
length(ABCD5_core_srs_dates$eventname)
length(ABCD5_core_srs_dates$sex)
summary(ABCD5_core_srs_dates$sds_p_ss_total)
ABCD5_core_srs_dates$sleepdisturb1_p <- as.numeric(ABCD5_core_srs_dates$sleepdisturb1_p)  # Ensure numeric
ABCD5_core_srs_dates$ssrs_p_ss_sum <- as.numeric(ABCD5_core_srs_dates$ssrs_p_ss_sum)  # Ensure numeric
table(ABCD5_core_srs_dates$sex, ABCD5_core_srs_dates$eventname, useNA = "always")
ABCD5_core_srs_dates$src_subject_id
ABCD5_core_srs_dates[eventname=="1_year_follow_up_y_arm_1"]
model_baseline <- glmmTMB(
sds_p_ss_total ~ baseline_srs +
(1 | src_subject_id) + (1 | relatedness),
family = gaussian(link = "identity"),
data = ABCD5_core_srs_dates[eventname == "1_year_follow_up_y_arm_1", ]
model_baseline <- glmmTMB(
model <- glmmTMB(
sds_p_ss_total ~ baseline_srs +
(1 | src_subject_id) + (1 | relatedness),
family = gaussian(link = "identity"),
data = ABCD5_core_srs_dates[eventname == "1_year_follow_up_y_arm_1"]
)
library(lubridate)
library(table1)
library(tableone)
library(tidyr)
library(lubridate)
library(mgcv)
library(sandwich)
library(lmtest)
library(ggplot2)
library(MASS)
library(lme4)
library(sjPlot)
model <- glmmTMB(
sds_p_ss_total ~ baseline_srs +
(1 | src_subject_id) + (1 | relatedness),
family = gaussian(link = "identity"),
data = ABCD5_core_srs_dates[eventname == "1_year_follow_up_y_arm_1"]
)
library(glmmTMB)
install.packages("glmmTMB")
library(glmmTMB)
model <- glmmTMB(
sds_p_ss_total ~ baseline_srs +
(1 | src_subject_id) + (1 | relatedness),
family = gaussian(link = "identity"),
data = ABCD5_core_srs_dates[eventname == "1_year_follow_up_y_arm_1"]
)
table(ABCD5_core_srs_dates$eventname)
subset_data <- ABCD5_core_srs_dates[ABCD5_core_srs_dates$eventname == "1_year_follow_up_y_arm_1", ]
model <- glmmTMB(
sds_p_ss_total ~ baseline_srs +
(1 | src_subject_id) + (1 | relatedness),
family = gaussian(link = "identity"),
data = subset_data
)
model <- glmmTMB(
sds_p_ss_total ~ baseline_srs +
(1 | relatedness),
family = gaussian(link = "identity"),
data = subset_data
)
table(subset_data$relatedness)
glmmTMB(
sds_p_ss_total ~ baseline_srs +
(1 | relatedness),
family = gaussian(link = "identity"),
data = subset_data
)
glmmTMB(
sds_p_ss_total ~ baseline_srs ,
family = gaussian(link = "identity"),
data = subset_data
)
model_gaussian1 <- glmmTMB(
sds_p_ss_total ~ baseline_srs * eventname+
(1 | src_subject_id) + (1 | relatedness),
family = gaussian(link = "identity"),
data = ABCD5_core_srs_dates
)
str(subset_data$relatedness)
summary(subset_data$relatedness)
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(
relatedness = if ("baseline_year_1_arm_1" %in% eventname)
rel_family_id[eventname == "baseline_year_1_arm_1"]
else
NA_real_
) %>%
ungroup()
table(ABCD5_core_srs$relatedness, ABCD5_core_srs$eventname,useNA = "always")
table(ABCD5_core_srs$rel_family_id, useNA = "always")
ABCD5_core_srs <- ABCD5_core_srs %>%
group_by(src_subject_id) %>%
mutate(
relatedness = if ("baseline_year_1_arm_1" %in% eventname)
rel_family_id[eventname == "baseline_year_1_arm_1"]
else
NA_real_
) %>%
ungroup()
glmmTMB(
sds_p_ss_total ~ baseline_srs +
(1 | relatedness),
family = gaussian(link = "identity"),
data = subset_data
)
x<-glmmTMB(
sds_p_ss_total ~ baseline_srs +
(1 | relatedness),
family = gaussian(link = "identity"),
data = subset_data
)
x<-glmmTMB(
sds_p_ss_total ~ baseline_srs ,
family = gaussian(link = "identity"),
data = subset_data
)
summary(x)
x<-glmmTMB(
sds_p_ss_total ~ baseline_srs +
sex + baseline_age + baseline_ethnicity +
baseline_deprivation*baseline_screens + site_id_l +
baseline_PA + baseline_screens +
baseline_cognition + baseline_cbcl_internal +
baseline_cbcl_external ,
family = gaussian(link = "identity"),
data = subset_data
)
summary(x)
tab_model(x)
library(table1)
summary(x)
tab_model(x)
library(tableone)
summary(x)
tab_model(x)
install.packages("sjPlot")  # Only run this once
library(sjPlot)
install.packages("sjPlot")  # Only run this once
library(sjPlot)
library(tableone)
summary(x)
tab_model(x)
install.packages('TMB', type = 'source')
tab_model(x)
x<-glmmTMB(
sds_p_ss_total ~ baseline_srs +
sex + baseline_age + baseline_ethnicity +
baseline_deprivation*baseline_screens + site_id_l +
baseline_PA + baseline_screens +
baseline_cognition + baseline_cbcl_internal +
baseline_cbcl_external ,
family = gaussian(link = "identity"),
data = subset_data
)
library(readxl)
library(dplyr)
library(lubridate)
library(table1)
library(tableone)
library(tidyr)
library(lubridate)
library(mgcv)
library(sandwich)
library(lmtest)
library(ggplot2)
library(MASS)
library(lme4)
library(sjPlot)
library(glmmTMB)
library (car)
x<-glmmTMB(
sds_p_ss_total ~ baseline_srs +
sex + baseline_age + baseline_ethnicity +
baseline_deprivation*baseline_screens + site_id_l +
baseline_PA + baseline_screens +
baseline_cognition + baseline_cbcl_internal +
baseline_cbcl_external ,
family = gaussian(link = "identity"),
data = subset_data
)
summary(x)
devtools::install_github(“Chronopsychiatry/AmbientViewer”, force = TRUE)
install.packages('TMB', type = 'source')
devtools::install_github(“Chronopsychiatry/AmbientViewer”, force = TRUE)
version()
R
R. version
R.version
devtools::install_github(“Chronopsychiatry/AmbientViewer”, force = TRUE)
devtools::install_github(“Chronopsychiatry/AmbientViewer”, force = TRUE)
devtools::install_github("Chronopsychiatry/AmbientViewer", force = TRUE)
install.packages("devtools")
devtools::install_github("Chronopsychiatry/AmbientViewer", force = TRUE)
1library(AmbientViewer)
devtools::install_github("Chronopsychiatry/AmbientViewer", force = TRUE)
devtools::install_github("Chronopsychiatry/AmbientViewer", force = TRUE)
setwd("C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI")
my_dirs <- getwd()
all_text_files <- list.files(my_dirs, pattern = "\\.pdf$", recursive=TRUE, full.names = TRUE)
split(all_text_files, dirname(all_text_files))
# Filter out files with "Archive" in the path (case-insensitive)
filtered_files <- all_text_files[!grepl("archive", all_text_files, ignore.case = TRUE)]
# Split the filtered list by directory
split(filtered_files, dirname(filtered_files))
filelist <- (
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/FrontCover.pdf" ,
filelist <- (
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/FrontCover.pdf",
filelist <- (
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/FrontCover.pdf")
filelist <- c(
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/FrontCover.pdf")
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_TOC.pdf",
filelist <- c("C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/FrontCover.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_TOC.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_ethics_proposal_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Consent_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/Appendix2.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Health_ScreenQ_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_support_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Questionnaires_MEQ_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Questionnaires_stopbang_210323.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_scid_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/InsomniaSeverityIndex_ISI.pdf"  )
#combine files
pdf_combine(input = filelist, output = "AmbientBD_PPI_050525.pdf")
#install and load package
library(qpdf)
#combine files
pdf_combine(input = filelist, output = "AmbientBD_PPI_050525.pdf")
filelist <- c("C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/FrontCover.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_TOC.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_ethics_proposal_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Consent_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_support_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/Appendix2.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Health_ScreenQ_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Questionnaires_MEQ_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Questionnaires_stopbang_210323.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_scid_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/InsomniaSeverityIndex_ISI.pdf"  )
#combine files
pdf_combine(input = filelist, output = "AmbientBD_PPI_050525.pdf")
filelist <- c("C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/FrontCover.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_TOC.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_ethics_proposal_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_support_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Consent_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/Appendix2.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Health_ScreenQ_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Questionnaires_MEQ_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Questionnaires_stopbang_210323.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_scid_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/InsomniaSeverityIndex_ISI.pdf"  )
pdf_combine(input = filelist, output = "AmbientBD_PPI_050525.pdf")
filelist <- c("C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/FrontCover.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_TOC.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_ethics_proposal_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_PIL_support_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Consent_BD_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/Appendix2.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Health_ScreenQ_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Questionnaires_MEQ_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_Questionnaires_stopbang_210323.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/AmbientBD_scid_040525_PPI.pdf",
"C:/Users/cwyse/University of Edinburgh/Ambient-BD - Documents/Workstream 1_Assessing data collection methods/11. Maynooth Ethics DPIA SOP Risk Assess MTA/Ethics/Ethics/PPI/InsomniaSeverityIndex_ISI.pdf"  )
pdf_combine(input = filelist, output = "AmbientBD_PPI_050525.pdf")
#combine files
pdf_combine(input = filelist, output = "AmbientBD_PPI_050525_for_review.pdf")
getwd()
install.packages('TMB', type = 'source')
library(TMB)
getwd()
getwd()
dir()
dir(/images)
list.files("images")
